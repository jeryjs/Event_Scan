name: Build Release

on:
  workflow_dispatch:
    inputs:
      build_android:
        description: 'Build Android APKs'
        required: true
        type: boolean
        default: true
      build_ios:
        description: 'Build iOS IPAs'
        required: true
        type: boolean
        default: false
  workflow_call:
    inputs:
      build_android:
        description: 'Build Android APKs'
        required: true
        type: boolean
        default: true
      build_ios:
        description: 'Build iOS IPAs'
        required: true
        type: boolean
        default: false

jobs:
  build-android:
    runs-on: ubuntu-latest
    if: ${{ inputs.build_android == true }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Cache Gradle
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Cache Pub Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.pub-cache
        key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-pub-

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.6'

    - name: Write key.properties
      run: echo "${{ secrets.KEY_PROPERTIES }}" > android/key.properties

    - name: Write key.jks
      run: echo "${{ secrets.KEY_JKS }}" | base64 --decode > android/key.jks

    - name: Accept Android SDK Licenses
      run: yes | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --licenses

    - name: Build APK
      run: |
        flutter pub get
        dart run flutter_iconpicker:generate_packs --packs material
        flutter build apk --release --split-per-abi --no-tree-shake-icons

    - name: Get version from pubspec.yaml
      id: get_version
      run: |
        VERSION=$(grep '^version: ' pubspec.yaml | sed 's/version: \(.*\)+.*$/\1/')
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Upload arm64-v8a APK
      uses: actions/upload-artifact@v4
      with:
        name: Event_Scan-v${{ env.VERSION }}-arm64-v8a-release.apk
        path: build/app/outputs/flutter-apk/app-arm64-v8a-release.apk

    - name: Upload armeabi-v7a APK
      uses: actions/upload-artifact@v4
      with:
        name: Event_Scan-v${{ env.VERSION }}-armeabi-v7a-release.apk
        path: build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk

    - name: Upload x86_64 APK
      uses: actions/upload-artifact@v4
      with:
        name: Event_Scan-v${{ env.VERSION }}-x86_64-release.apk
        path: build/app/outputs/flutter-apk/app-x86_64-release.apk

  build-ios:
    runs-on: macos-latest
    if: ${{ inputs.build_ios == true }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer

    - name: Cache CocoaPods
      uses: actions/cache@v3
      with:
        path: |
          ~/.cocoapods
          ios/Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    - name: Cache Pub Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.pub-cache
        key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-pub-

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.6'

    - name: Setup iOS build environment
      run: |
        # Clean any existing pods to ensure fresh install
        cd ios && rm -rf Pods Podfile.lock && cd ..

    - name: Get version from pubspec.yaml
      id: get_version
      run: |
        VERSION=$(grep '^version: ' pubspec.yaml | sed 's/version: \(.*\)+.*$/\1/')
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Build iOS
      run: |
        flutter pub get
        dart run flutter_iconpicker:generate_packs --packs material
        cd ios && pod install --repo-update && cd ..
        flutter build ios --release --no-codesign --no-tree-shake-icons

    - name: Create IPA
      run: |
        cd build/ios/iphoneos
        mkdir -p Payload
        cp -r Runner.app Payload/
        zip -r ../../../Event_Scan-v${{ env.VERSION }}-release.ipa Payload/

    - name: Upload IPA
      uses: actions/upload-artifact@v4
      with:
        name: Event_Scan-v${{ env.VERSION }}-release.ipa
        path: Event_Scan-v${{ env.VERSION }}-release.ipa