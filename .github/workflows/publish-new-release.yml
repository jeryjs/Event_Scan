name: Publish New Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.2'

    - name: Get version from pubspec.yaml
      id: get_version
      run: |
        VERSION=$(grep '^version: ' pubspec.yaml | sed 's/version: \(.*\)+.*$/\1/')
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Create tag
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git tag "v${{ env.VERSION }}"
        git push origin "v${{ env.VERSION }}"

    - name: Build APK
      run: |
        flutter build apk --release --split-per-abi --no-tree-shake-icons

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "v${{ env.VERSION }}"
        release_name: "v${{ env.VERSION }}"
        body: |
          ## Commits

          ${{ github.event.before }}...${{ github.sha }}

          $(git log --pretty=format:"- %s (%h) (@%an)" --reverse ${{ github.event.before }}...${{ github.sha }})

          **Full Changelog**: https://github.com/jeryjs/Event_Scan/compare/${{ github.event.before }}...${{ github.sha }})
        draft: false
        prerelease: false

    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
        asset_name: app-armeabi-v7a-release.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
        asset_name: app-arm64-v8a-release.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
        asset_name: app-arm64-v8a-release.apk
        asset_content_type: application/vnd.android.package-archive
