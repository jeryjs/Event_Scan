name: Publish New Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.2'

    - name: Write key.properties
      run: echo "${{ secrets.KEY_PROPERTIES }}" > android/key.properties

    - name: Write key.jks
      run: echo "${{ secrets.KEY_JKS }}" | base64 --decode > android/key.jks

    - name: Build APK
      run: |
        flutter pub get
        dart run flutter_iconpicker:generate_packs --packs material
        flutter build apk --release --split-per-abi --no-tree-shake-icons

    - name: Get version from pubspec.yaml
      id: get_version
      run: |
        VERSION=$(grep '^version: ' pubspec.yaml | sed 's/version: \(.*\)+.*$/\1/')
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Create tag
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git tag "v${{ env.VERSION }}" || echo "Tag already exists"
        git push origin "v${{ env.VERSION }}" || echo "Tag already pushed"

    - name: Prepare Release
      run: |
        set -e
        git fetch --tags
        prev_release_sha=$(git log --oneline --decorate --tags --no-walk --pretty='%C(auto)%h' | head -n 2 | tail -1)
        echo "PREV_RELEASE_SHA=$prev_release_sha" >> $GITHUB_ENV
        
        current_sha=$(git log --oneline --decorate --tags --no-walk --pretty='%C(auto)%h' | head -n 1)
        echo "CURRENT_SHA=$current_sha" >> $GITHUB_ENV
        
        echo "COMMIT_LOGS<<{delimiter}
        $(curl -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/jeryjs/Event_Scan/compare/$prev_release_sha...$current_sha" \
          | jq '[.commits[]|{message:(.commit.message | split("\n")), username:.author.login}]' \
          | jq -r '.[]|"- \(.message | first) (@\(.username))"')
        {delimiter}" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "v${{ env.VERSION }}"
        release_name: "v${{ env.VERSION }}"
        body: |
          ## Commits

          ${{env.COMMIT_LOGS}}

          **Full Changelog**: https://github.com/jeryjs/Event_Scan/compare/${{ env.PREV_RELEASE_SHA }}...${{ env.CURRENT_SHA }}

          ---
        files: |
          build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
          build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
          build/app/outputs/flutter-apk/app-x86_64-release.apk
        draft: false
        prerelease: false